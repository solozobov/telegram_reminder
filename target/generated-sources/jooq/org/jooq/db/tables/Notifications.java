/*
 * This file is generated by jOOQ.
 */
package org.jooq.db.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.db.Indexes;
import org.jooq.db.Keys;
import org.jooq.db.Public;
import org.jooq.db.tables.records.NotificationsRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Notifications extends TableImpl<NotificationsRecord> {

    private static final long serialVersionUID = -741029909;

    /**
     * The reference instance of <code>public.notifications</code>
     */
    public static final Notifications NOTIFICATIONS = new Notifications();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NotificationsRecord> getRecordType() {
        return NotificationsRecord.class;
    }

    /**
     * The column <code>public.notifications.id</code>.
     */
    public final TableField<NotificationsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('notifications_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.notifications.chat_id</code>.
     */
    public final TableField<NotificationsRecord, Long> CHAT_ID = createField("chat_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.notifications.message_id</code>.
     */
    public final TableField<NotificationsRecord, Integer> MESSAGE_ID = createField("message_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.notifications.time</code>.
     */
    public final TableField<NotificationsRecord, LocalDateTime> TIME = createField("time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.notifications.forestall_minutes</code>.
     */
    public final TableField<NotificationsRecord, Integer> FORESTALL_MINUTES = createField("forestall_minutes", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.notifications</code> table reference
     */
    public Notifications() {
        this(DSL.name("notifications"), null);
    }

    /**
     * Create an aliased <code>public.notifications</code> table reference
     */
    public Notifications(String alias) {
        this(DSL.name(alias), NOTIFICATIONS);
    }

    /**
     * Create an aliased <code>public.notifications</code> table reference
     */
    public Notifications(Name alias) {
        this(alias, NOTIFICATIONS);
    }

    private Notifications(Name alias, Table<NotificationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Notifications(Name alias, Table<NotificationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Notifications(Table<O> child, ForeignKey<O, NotificationsRecord> key) {
        super(child, key, NOTIFICATIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NOTIFICATIONS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NotificationsRecord, Long> getIdentity() {
        return Keys.IDENTITY_NOTIFICATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NotificationsRecord> getPrimaryKey() {
        return Keys.NOTIFICATIONS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NotificationsRecord>> getKeys() {
        return Arrays.<UniqueKey<NotificationsRecord>>asList(Keys.NOTIFICATIONS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Notifications as(String alias) {
        return new Notifications(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Notifications as(Name alias) {
        return new Notifications(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Notifications rename(String name) {
        return new Notifications(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Notifications rename(Name name) {
        return new Notifications(name, null);
    }
}
